C51 COMPILER V9.50a   MAIN                                                                 01/06/2023 13:47:06 PAGE 1   


C51 COMPILER V9.50a, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\OUTPUT\main.obj
COMPILER INVOKED BY: D:\Keil\C51\C51\BIN\C51.EXE USER\main.c BROWSE INCDIR(.\USER;.\BSP\LED;D:\Keil\C51\C51\INC) DEBUG O
                    -BJECTEXTEND PRINT(.\LISITING\main.lst) TABS(2) OBJECT(.\OUTPUT\main.obj)

line level    source

   1          #include<reg51.h>
   2          #include<stdio.h>
   3          #include<stdlib.h>
   4          #include"led.h"
   5          
   6          //这是head的移动量，值为-1，0，1
   7          char head_add_x, head_add_y;
   8          //定义蛇的长度length
   9          u8 length;
  10          //游戏初始速度为5
  11          u8 speed;
  12          //存储果实的横纵坐标
  13          u8 food_x, food_y;
  14          //分别存储蛇身的横坐标、总坐标
  15          char snake_x[20] = {0};
  16          char snake_y[20] = {0};
  17          
  18          //LED点阵横坐标、纵坐标的亮灭控制，从左下角开始为第一个
  19          u8 led_row[8] = {0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80};
  20          u8 led_col[8] = {0x7f, 0xbf, 0xdf, 0xef, 0xf7, 0xfb, 0xfd, 0xfe};
  21          
  22          /*
  23          贪吃蛇移动函数
  24          输入：蛇身数组的指针，蛇长
  25          输出：移动后的蛇身数组
  26          */
  27          void snake_move()
  28          {
  29   1          u8 i;
  30   1          for (i = length; i > 0; i--)
  31   1          {
  32   2              snake_x[i] = snake_x[i - 1];
  33   2              snake_y[i] = snake_y[i - 1];
  34   2          }
  35   1          //根据贪吃蛇的游戏原理，当坐标为-1时，变为7，当坐标为8时，变为0
  36   1          snake_x[0] = (snake_x[0] + head_add_x + 8) % 8;
  37   1          snake_y[0] = (snake_y[0] + head_add_y + 8) % 8;
  38   1      }
  39          
  40          /*
  41          游戏初始化函数
  42          输入：无
  43          输出：速度、蛇身长度、LED点阵等回到初始状态，给蛇一个随机的初始方向
  44          */
  45          void snake_init()
  46          {
  47   1        unsigned char d;
  48   1        length = 1;
  49   1        speed = 1;
  50   1        hc595_write_data(led_row[0]);
  51   1        P0 = led_col[0];
  52   1        
  53   1        d = rand() % 2;
  54   1        switch (d)
C51 COMPILER V9.50a   MAIN                                                                 01/06/2023 13:47:06 PAGE 2   

  55   1        {
  56   2        case 0:
  57   2          head_add_x = 1;
  58   2          head_add_y = 0;
  59   2          break;
  60   2        case 1:
  61   2          head_add_x = 0;
  62   2          head_add_y = 1;
  63   2          break;
  64   2        }
  65   1      }
  66          
  67          /*
  68          随机生成果实函数
  69          输入：无
  70          输出：生成一个随机位置的果实
  71          */
  72          void food()
  73          {
  74   1        u8 flag = 0;
  75   1        u8 i;
  76   1        while (!flag)
  77   1        {
  78   2          food_x = rand() % 8;
  79   2          food_y = rand() % 8;
  80   2          flag = 1;
  81   2          
  82   2          for (i = 0; i < length; i++)
  83   2          {
  84   3            if (snake_x[i] == food_x && snake_y[i] == food_y)
  85   3            {
  86   4              flag = 0;
  87   4              break;
  88   4            }
  89   3          }
  90   2        }
  91   1      }
  92          
  93          
  94          
  95          
  96          void main()
  97          {
  98   1        snake_init();
  99   1        food();
 100   1        while (1)
 101   1        {
 102   2          u8 i;
 103   2          for (i = 0; i < length; i++)
 104   2          {
 105   3            hc595_write_data(led_row[snake_x[i]]);
 106   3            P0 = led_col[snake_y[i]];
 107   3          }
 108   2          hc595_write_data(led_row[food_x]);
 109   2          P0 = led_col[food_y];
 110   2          snake_move();
 111   2          delay_ms(20 * (10 - speed));
 112   2        }
 113   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.50a   MAIN                                                                 01/06/2023 13:47:06 PAGE 3   

   CODE SIZE        =    272    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     62       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
