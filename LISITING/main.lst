C51 COMPILER V9.50a   MAIN                                                                 01/07/2023 20:11:55 PAGE 1   


C51 COMPILER V9.50a, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\OUTPUT\main.obj
COMPILER INVOKED BY: D:\Keil\C51\C51\BIN\C51.EXE USER\main.c BROWSE INCDIR(.\USER;.\BSP\LED;.\BSP\DELAY;.\BSP\UART) DEBU
                    -G OBJECTEXTEND PRINT(.\LISITING\main.lst) TABS(2) OBJECT(.\OUTPUT\main.obj)

line level    source

   1          #include<reg51.h>
   2          #include<stdio.h>
   3          #include<stdlib.h>
   4          #include"led.h"
   5          #include"delay.h"
   6          
   7          //这是head的移动量，值为-1，0，1
   8          char head_add_x, head_add_y;
   9          //定义蛇的长度length
  10          u8 length;
  11          //游戏初始速度为5
  12          u8 speed;
  13          //存储果实的横纵坐标
  14          u8 food_x, food_y;
  15          //分别存储蛇身的横坐标、总坐标
  16          char snake_x[20] = {0};
  17          char snake_y[20] = {0};
  18          
  19          //LED点阵横坐标、纵坐标的亮灭控制，从左下角开始为第一个
  20          u8 led_row[8] = {0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80};
  21          u8 led_col[8] = {0x7f, 0xbf, 0xdf, 0xef, 0xf7, 0xfb, 0xfd, 0xfe};
  22          
  23          /*
  24          贪吃蛇移动函数
  25          输入：蛇身数组的指针，蛇长
  26          输出：移动后的蛇身数组
  27          */
  28          void snake_move()
  29          {
  30   1          u8 i;
  31   1          for (i = length; i > 0; i--)
  32   1          {
  33   2              snake_x[i] = snake_x[i - 1];
  34   2              snake_y[i] = snake_y[i - 1];
  35   2          }
  36   1          //根据贪吃蛇的游戏原理，当坐标为-1时，变为7，当坐标为8时，变为0
  37   1          snake_x[0] = (snake_x[0] + head_add_x + 8) % 8;
  38   1          snake_y[0] = (snake_y[0] + head_add_y + 8) % 8;
  39   1      }
  40          
  41          /*
  42          游戏初始化函数
  43          输入：无
  44          输出：速度、蛇身长度、LED点阵等回到初始状态，给蛇一个随机的初始方向
  45          */
  46          void snake_init()
  47          {
  48   1        unsigned char d;
  49   1        length = 1;
  50   1        speed = 1;
  51   1        row(led_row[0]);
  52   1        col(led_col[0]);
  53   1        
  54   1        d = rand() % 2;
C51 COMPILER V9.50a   MAIN                                                                 01/07/2023 20:11:55 PAGE 2   

  55   1        switch (d)
  56   1        {
  57   2        case 0:
  58   2          head_add_x = 1;
  59   2          head_add_y = 0;
  60   2          break;
  61   2        case 1:
  62   2          head_add_x = 0;
  63   2          head_add_y = 1;
  64   2          break;
  65   2        }
  66   1      }
  67          
  68          /*
  69          随机生成果实函数
  70          输入：无
  71          输出：生成一个随机位置的果实
  72          */
  73          void food()
  74          {
  75   1        u8 flag = 0;
  76   1        u8 i;
  77   1        while (!flag)
  78   1        {
  79   2          food_x = rand() % 8;
  80   2          food_y = rand() % 8;
  81   2          flag = 1;
  82   2          
  83   2          for (i = 0; i < length; i++)
  84   2          {
  85   3            if (snake_x[i] == food_x && snake_y[i] == food_y)
  86   3            {
  87   4              flag = 0;
  88   4              break;
  89   4            }
  90   3          }
  91   2        }
  92   1      }
  93          
  94          
  95          
  96          
  97          void main()
  98          {
  99   1        snake_init();
 100   1        food();
 101   1        while (1)
 102   1        {
 103   2          u8 i;
 104   2          for (i = 0; i < length; i++)
 105   2          {
 106   3            row(led_row[snake_x[i]]);
 107   3            col(led_col[snake_y[i]]);
 108   3          }
 109   2          row(led_row[food_x]);
 110   2          col(led_col[food_y]);
 111   2          snake_move();
 112   2          delay_ms(20 * (10 - speed));
 113   2        }
 114   1      }


C51 COMPILER V9.50a   MAIN                                                                 01/07/2023 20:11:55 PAGE 3   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    278    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     62       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
